/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.form;

//import controller.Controller;
import domain.Librarian;
import domain.Member;
import java.util.List;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import view.controller.Controller;

/**
 *
 * @author LORA
 */
public class MemberForm extends javax.swing.JFrame {
    Member member;
    ViewMemberForm parentForm;
    /**
     * Creates new form CreateMemberForm
     */
    public MemberForm(ViewMemberForm parentForm) {
        initComponents();
        setLocationRelativeTo(null);
        this.parentForm=parentForm;
        try {
            prepareView();
        } catch (Exception ex) {
            Logger.getLogger(MemberForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMemberID = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        btnAddMember = new javax.swing.JButton();
        btnDeleteMember = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        btnChange = new javax.swing.JButton();
        btnEnableChanges = new javax.swing.JButton();
        btnDCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Član biblioteke"));

        jLabel1.setText("Član ID:");

        jLabel2.setText("Ime:");

        jLabel3.setText("Prezime");

        txtMemberID.setEditable(false);

        btnAddMember.setText("Sačuvaj");
        btnAddMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMemberActionPerformed(evt);
            }
        });

        btnDeleteMember.setText("Obriši");
        btnDeleteMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMemberActionPerformed(evt);
            }
        });

        jLabel4.setText("Kontakt:");

        btnChange.setText("Izmeni");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnEnableChanges.setText("Omogući izmenu");
        btnEnableChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnableChangesActionPerformed(evt);
            }
        });

        btnDCancel.setText("Odustani");
        btnDCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtMemberID)
                        .addComponent(txtFirstName)
                        .addComponent(txtLastName)
                        .addComponent(txtContact, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddMember, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteMember, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnEnableChanges)
                        .addGap(33, 33, 33)
                        .addComponent(btnDCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddMember)
                    .addComponent(btnDeleteMember)
                    .addComponent(btnChange))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnableChanges)
                    .addComponent(btnDCancel))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMemberActionPerformed
        try {
            validateForm();
            String firstName=txtFirstName.getText().trim();
            String lastName=txtLastName.getText().trim();
            String contact=txtContact.getText().trim(); 
           
            long id=Long.parseLong(txtMemberID.getText());
            Member member=new Member(id, firstName, lastName, contact, Controller.getInstance().getCurrentLibrarian());
            Controller.getInstance().addMember(member);
            JOptionPane.showMessageDialog(null, "Sistem je zapamtio člana");
            refreshForm();
            parentForm.fillTableMembers();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"Sistem ne može da kreira člana", "ERROR",  JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddMemberActionPerformed

    private void btnDCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDCancelActionPerformed
            dispose();
    }//GEN-LAST:event_btnDCancelActionPerformed

    private void btnEnableChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnableChangesActionPerformed
        txtContact.setEditable(true);
        txtFirstName.setEditable(true);
        txtLastName.setEditable(true);
            }//GEN-LAST:event_btnEnableChangesActionPerformed

    private void btnDeleteMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMemberActionPerformed
        
        String firstName=txtFirstName.getText().trim();
        String lastName=txtLastName.getText().trim();
        String contact=txtContact.getText().trim();
        long id=Long.parseLong(txtMemberID.getText().trim());
        Librarian lib=Controller.getInstance().getCurrentLibrarian();
        Member m=new Member(id, firstName, lastName, contact, lib);
        try {
            Controller.getInstance().removeMember(m);
            JOptionPane.showMessageDialog(this, "Sistem je obrisao člana" );
            parentForm.fillTableMembers();
        } catch (Exception ex) { 
            JOptionPane.showMessageDialog(this,"Sistem je ne može da obrise člana", "ERROR",  JOptionPane.ERROR_MESSAGE);

            ex.printStackTrace();
            
        }

     
    }//GEN-LAST:event_btnDeleteMemberActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        long id=Long.parseLong(txtMemberID.getText().trim());
        String firstName=txtFirstName.getText().trim();
        String lastName=txtLastName.getText().trim();
        String contact=txtContact.getText().trim();
        Member m=new Member(id, firstName, lastName, contact, Controller.getInstance().getCurrentLibrarian());
        try {
            Controller.getInstance().updateMember(m);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio člana");
            parentForm.fillTableMembers();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti člana", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MemberForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnChangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberForm().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMember;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDCancel;
    private javax.swing.JButton btnDeleteMember;
    private javax.swing.JButton btnEnableChanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMemberID;
    // End of variables declaration//GEN-END:variables

    private void validateForm() throws Exception {
        String errorMessage="";
        if(txtFirstName.getText().isEmpty()){
         errorMessage+="Firstname cannot be empty!\n";   
        }
         if(txtLastName.getText().isEmpty()){
         errorMessage+="Lastname cannot be empty!\n";   
        } 
         if(txtContact.getText().isEmpty()){
         errorMessage+="Contact cannot be empty!\n";   
        }
         if(!errorMessage.isEmpty()){
         JOptionPane.showMessageDialog(this, "ERROR:"+errorMessage, "GRESKA", JOptionPane.ERROR_MESSAGE);        
         throw new Exception(errorMessage);
        
         }
    }

    private Long setID() throws Exception {
        long id=0l;
        try {
           List<Member> list=Controller.getInstance().getAllMembers();
            
            for (int i = 0; i < list.size(); i++) {
                Member m = list.get(i);
                if(id<m.getMemberID()){
                    id=m.getMemberID();
                }
            }
            id=id+1;
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return id;
    }

    public void setMember(Member member) {
        this.member = member;
    }

    void loadData(Member selectedMember) {
        txtMemberID.setText(String.valueOf(selectedMember.getMemberID()));
        txtFirstName.setText(selectedMember.getFirstName());
        txtLastName.setText(selectedMember.getLastName());
        txtContact.setText(selectedMember.getContact());
        txtContact.setEditable(false);
        txtFirstName.setEditable(false);
        txtLastName.setEditable(false);
        txtMemberID.setEditable(false);
        
        btnAddMember.setEnabled(false);
        btnChange.setEnabled(true);
        btnDeleteMember.setEnabled(true);
        btnEnableChanges.setEnabled(true);
        
    }

    private void refreshForm() {
     
        try {
            long id=setID();
            txtMemberID.setText(String.valueOf(id));
            txtFirstName.setText("");
            txtLastName.setText("");
            txtContact.setText("");
        } catch (Exception ex) {
            Logger.getLogger(MemberForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void prepareView() {
        try {
            txtMemberID.setText(String.valueOf(setID()));
            btnChange.setEnabled(false);
            btnDeleteMember.setEnabled(false);
            btnEnableChanges.setEnabled(false);
        } catch (Exception ex) {
            Logger.getLogger(MemberForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

   
    
   
}
